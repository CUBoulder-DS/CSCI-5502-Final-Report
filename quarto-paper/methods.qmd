# Methods

```{python}
#!pip install tabulate plotly dateutil
```

```{python}
#| include: false
import os

import pandas as pd
from IPython.display import display, Latex, Markdown

data_dir = os.path.normpath("../data/")
```

## Data

<!-- TODO: Data where did we get it, how was transformed, changes made -->

The data used format can be seen in @tbl-src-data. The description of the columns used are as follows:

- **QuestionId**: ID of the question answered.
- **UserId**: ID of the student who answered the question.
- **AnswerId**: Unique identifier for the (QuestionId, UserId) pair, used to join with associated answer metadata (see below).
- **IsCorrect**: Binary indicator for whether the student’s answer was correct (1 is correct, 0 is incorrect).
- **SubjectId**: Each subject covers an area of mathematics, at varying degrees of gran- ularity. We provide IDs for each topic associated with a question in a list. Example topics could include “Algebra”, “Data and Statistics”, and “Geometry and Measure”. These subjects are arranged in a tree structure, so that for instance “Factorising” is the parent subject of “Factorising into a Single Bracket”. We provide details of this tree in an additional file subject metadata.csv which contains the subject name and tree level associated with each SubjectId, in addition to the SubjectId of its parent subject.
- **Category1**: Feature engineered. The first-level category of the question (given that there is hierarchical categories)
- **Gender**: The student’s gender, when available. 0 is unspecified, 1 is female, 2 is male and 3 is other.
- **Age**: Feature engineered. The student's age, as calculated from `DateAnswered - DateOfBirth`.
- **PremiumPupil**: Whether the student is eligible for free school meals or pupil premium due to being financially disadvantaged.
- **DateAnswered**: Time and date that the question was answered, to the nearest minute.
- **Confidence**: Percentage confidence score given for the answer. 0 means a random guess, 100 means total confidence.
- **GroupId**: The class (group of students) in which the student was assigned the question.
- **QuizId**: The assigned quiz which contains the question the student answered.


```{python}
#| label: tbl-src-data
#| tbl-cap: The source data used in this paper, tranformed by unions across several csvs, some columns dropped, and some created columns.
#| tbl-subcap:
#|  - First set of columns
#|  - Second set of columns

df_data = pd.read_csv(os.path.join(data_dir, "eedi_34_data.csv"), index_col=0)
df_data = df_data.drop(columns=["CorrectAnswer", "AnswerValue", "SchemeOfWorkId"])
display(Markdown(df_data.head().loc[:, :"GroupId"].to_markdown()))
display(Markdown(df_data.head().loc[:, "QuizId":].to_markdown()))
```


## Statistical Methods Analysis

### Clustering

### Supervised Learning Models

### Principal Component Analysis (PCA)

#### Using PCA with Supervised Learning

TODO:

-   Compare results of clustering to the given question category labels
-   Do PCA, do regression on both the PCs and original features, compare regression performance
-   Do regression
    -   Where label/output is the student's total score
    -   Regress on student info, predict total student score across all answers
        -   Also if it's predictive of score in the question category
-   Random forest?
